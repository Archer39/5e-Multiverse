{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_hck378qhg4c","name":"Livello 1","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["jmHsB7UE3g11NlOL"],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594566492,"modifiedTime":1669595330220,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"305Qknup5seHTG5H"}
{"name":"Green-Flame Blade","type":"spell","img":"icons/skills/melee/blade-tip-energy-green.webp","system":{"description":{"value":"<p>You brandish the weapon used in the spell’s casting and make a melee attack with it against one creature within 5 feet of you. On a hit, the target suffers the weapon attack’s normal effects, and you can cause green fire to leap from the target to a different creature of your choice that you can see within 5 feet of it. The second creature takes fire damage equal to your spellcasting ability modifier.</p>\n<p>This spell’s damage increases when you reach certain levels. At 5th level, the melee attack deals an extra 1d8 fire damage to the target on a hit, and the fire damage to the second creature increases to 1d8 + your spellcasting ability modifier. Both damage rolls increase by 1d8 at 11th level (2d8 and 2d8) and 17th level (3d8 and 3d8).</p>","chat":"<p>You brandish the weapon used in the spell’s casting and make a melee attack with it against one creature within 5 feet of you. On a hit, the target suffers the weapon attack’s normal effects, and you can cause green fire to leap from the target to a different creature of your choice that you can see within 5 feet of it. The second creature takes fire damage equal to your spellcasting ability modifier.</p>\n<p>This spell’s damage increases when you reach certain levels. At 5th level, the melee attack deals an extra 1d8 fire damage to the target on a hit, and the fire damage to the second creature increases to 1d8 + your spellcasting ability modifier. Both damage rolls increase by 1d8 at 11th level (2d8 and 2d8) and 17th level (3d8 and 3d8).</p>","unidentified":""},"source":"Sword Coast Adventurer's Guide pg 142","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":"ft"},"uses":{"value":0,"max":"0","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":null},"damage":{"parts":[],"versatile":"@mod","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":0,"school":"evo","components":{"value":"a melee weapon worth at least 1 sp","vocal":false,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"a melee weapon worth at least 1 sp","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"always","prepared":true},"scaling":{"mode":"none","formula":""}},"effects":[],"flags":{"ddbimporter":{"id":288,"definitionId":2411,"entityTypeId":420821570,"dndbeyond":{"lookup":"feat","lookupName":"Magic Initiate (Wizard)","lookupId":63,"level":null,"ability":"int","mod":4,"dc":14,"overrideDC":false,"id":288,"entityTypeId":420821570,"healingBoost":0},"sources":[{"sourceId":13,"pageNumber":142,"sourceType":1}],"tags":["Damage","Combat"]},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"itemacro":{"macro":{"data":{"_id":null,"name":"Green-Flame Blade","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nlet actorD = game.actors.get(lastArg.actor._id);\nlet tokenD = canvas.tokens.get(lastArg.tokenId);\nlet itemD = lastArg.item;\nitemD.data.level = lastArg.spellLevel;\nlet msgHistory = lastArg.actor.items.reduce((list, item) => {\n\tlet workflow = MidiQOL.Workflow.getWorkflow(item.uuid);\n\tif ((workflow) && (workflow.item.data.type === \"weapon\")) list.push(workflow);\n\treturn list;\n}, []);\nif (msgHistory.length === 0) return ui.notifications.warn(`You need to successfully attack first.`);\nlet lastAttack = msgHistory.pop();\nlet mainTarget = lastAttack.hitTargets.values().next().value;\nlet level = actorD.data.type === \"character\" ? actorD.data.data.details.level : actorD.data.data.details.cr;\nlet spellStat = actorD.data.data.attributes.spellcasting;\nlet spellcasting = actorD.data.data.abilities[spellStat].mod;\nlet numDice = Math.floor((level + 1) / 6);\nlet damageType = \"fire\";\nlet firstDamage = lastAttack.isCritical ? `${numDice * 2}d8` : `${numDice}d8`;\nlet secondDamage = numDice >= 1 ? `${numDice}d8+${spellcasting}` : spellcasting;\nlet firstDamageRoll = new Roll(`${firstDamage}[fire]`).evaluate({ async: false });\nlet secondDamageRoll = new Roll(`${secondDamage}[fire]`).evaluate({ async: false });\nlet secondTarget = await MidiQOL.findNearby(CONST.TOKEN_DISPOSITIONS.FRIENDLY, mainTarget, 5, null);\nif (numDice >= 1) {\n\tlet damageWorkflow = await new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, firstDamageRoll.total, damageType, [mainTarget], firstDamageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemCardId: lastArg.itemCardId,  itemData: itemD});\n\tlet damageBonusMacro = getProperty(actorD.data.flags, `${game.system.id}.DamageBonusMacro`);\n\tif (damageBonusMacro) {\n\t\tawait damageWorkflow.rollBonusDamage(damageBonusMacro);\n\t} else {\n\t\tawait damageWorkflow;\n\t}\n\tawait game.dice3d?.showForRoll(firstDamageRoll);\n\tonfire(mainTarget);\n}\nif(secondTarget.length === 0) return {};\nelse if (secondTarget.length > 1) {\n\tlet target_list = secondTarget.reduce((list, target) => {\n\t\tlist += `<option value=\"${target.id}\">${target.name}</option>`;\n\t\treturn list;\n\t}, \"\");\n\tnew Dialog({\n\t\ttitle: itemD.name,\n\t\tcontent: `<p>Pick a secondary target</p><form><div class=\"form-group\"><select id=\"hitTarget\">${target_list}</select></div></form>`,\n\t\tbuttons: {\n\t\t\tattack: {\n\t\t\t\tlabel: \"Confirmed\", callback: async (html) => {\n\t\t\t\t\tlet target_id = html.find('#hitTarget')[0].value;\n\t\t\t\t\tlet find_target = canvas.tokens.get(target_id);\n\t\t\t\t\tlet cardType = numDice >= 1 ? { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemData: itemD, itemCardId: \"new\" } : { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemData: itemD, itemCardId: \"new\"};\n\t\t\t\t\tawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, secondDamageRoll.total, damageType, [find_target], secondDamageRoll, cardType);\n\t\t\t\t\tawait game.dice3d?.showForRoll(secondDamageRoll);\n\t\t\t\t\tonfire(find_target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdefault: \"Confirmed\"\n\t}).render(true);\n} else {\n\tlet find_target = secondTarget.values().next().value;\n\tawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, secondDamageRoll.total, damageType, [find_target], secondDamageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemData: itemD, itemCardId: \"new\" });\n\tawait game.dice3d?.showForRoll(secondDamageRoll);\n\tonfire(find_target);\n}\nasync function onfire(target) {\n\tlet params = [{\n\t\tfilterType: \"xfire\",\n\t\tfilterId: \"myBlackXFire\",\n\t\tautoDestroy: true,\n\t\ttime: 0,\n\t\tcolor: 0x008000,\n\t\tblend: 11,\n\t\tamplitude: 1,\n\t\tdispersion: 2.2,\n\t\tchromatic: false,\n\t\tscaleX: 2.5,\n\t\tscaleY: 2,\n\t\tinlay: false,\n\t\tanimated:\n\t\t{\n\t\t\ttime:\n\t\t\t{\n\t\t\t\tactive: true,\n\t\t\t\tspeed: -0.0015,\n\t\t\t\tloops: 1,\n\t\t\t\tanimType: \"move\"\n\t\t\t}\n\t\t}\n\t}];\n\tawait TokenMagic.addUpdateFilters(target, params);\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"_id":null,"name":"Green-Flame Blade","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"// Midi-Qol On Use Macro\n// Downloaded from https://www.patreon.com/crymic\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorD = tokenD.actor;\nconst actorData = actorD.getRollData();\nconst itemD = lastArg.item;\nconst version = Math.floor(game.version);\nlet msgHistory = actorD.itemTypes.weapon.reduce((list, weapon) => {\n\tlet workflow = MidiQOL.Workflow.getWorkflow(weapon.uuid);\n\tif (workflow) list.push(workflow);\n\telse return list;\n\treturn list;\n}, []);\nif (msgHistory.length === 0) return ui.notifications.warn(`You need to successfully attack first.`);\nlet lastAttack = msgHistory.pop();\nlet level = actorData.details?.level ?? actorData.details?.cr;\nlet spellStat = actorData.attributes.spellcasting;\nif (spellStat === \"\") spellStat = \"int\";\nlet spellcasting = actorData.abilities[spellStat].mod;\nlet numDice = Math.floor((level + 1) / 6);\nlet damageType = numDice >= 1 ? \"fire\" : \"midi-none\";\nlet damageFormula = numDice >= 1 ? `${numDice}d8[${damageType}]` : `0[midi-none]`;\nlet mainTarget = await lastAttack.hitTargets.values().next().value;\nlet secondTarget = await MidiQOL.findNearby(CONST.TOKEN_DISPOSITIONS.FRIENDLY, mainTarget, 5, null);\nlet damageRoll = await new game.dnd5e.dice.DamageRoll(damageFormula, actorData, { critical: lastAttack.isCritical }).evaluate({async:true});\nif (numDice >= 1) {\n\tawait game.dice3d?.showForRoll(damageRoll);\n\tawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damageType, [mainTarget], damageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemCardId: lastArg.itemCardId });\n}\nif (secondTarget.length === 0) {\n\tif (numDice < 1) await new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damageType, [mainTarget], damageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemCardId: lastArg.itemCardId });\t\n\treturn;\n};\nlet target = await secondTarget[0];\nif (secondTarget.length > 1) {\n\tlet target_list = await secondTarget.reduce((list, target) => list += `<option value=\"${target.document.id}\">${target.actor.name}</option>`, ``);\n\ttarget = await new Promise((resolve) => {\n\t\tnew Dialog({\n\t\t\ttitle: itemD.name,\n\t\t\tcontent: `<p>Pick a secondary target</p><form><div class=\"form-group\"><select id=\"hitTarget\">${target_list}</select></div></form>`,\n\t\t\tbuttons: {\n\t\t\t\tattack: {\n\t\t\t\t\tlabel: \"Confirmed\", callback: async (html) => {\n\t\t\t\t\t\tlet targetId = await html.find('#hitTarget')[0].value;\n\t\t\t\t\t\tresolve(canvas.tokens.get(targetId));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).render(true);\n\t});\n}\nlet finalTarget = await target;\ndamageType = \"fire\";\ndamageFormula = numDice >= 1 ? `${numDice}d8[${damageType}] + ${spellcasting}` : `${spellcasting}[${damageType}]`;\ndamageRoll = await new game.dnd5e.dice.DamageRoll(damageFormula, actorData, { critical: lastAttack.isCritical }).evaluate({async:true});\nif (numDice >= 1) {\n\tawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damageType, [finalTarget], damageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemData: itemD, itemCardId: \"new\" });\n} else {\n\tawait new MidiQOL.DamageOnlyWorkflow(actorD, tokenD, damageRoll.total, damageType, [finalTarget], damageRoll, { flavor: `(${CONFIG.DND5E.damageTypes[damageType]})`, itemCardId: lastArg.itemCardId });\n}\nawait game.dice3d?.showForRoll(damageRoll);","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"midi-qol":{"onUseMacroName":"[postActiveEffects]ItemMacro","forceCEOn":false,"effectActivation":false},"favtab":{"isFavorite":true},"enhanced-terrain-layer":{"multiple":1,"min":0,"max":0,"environment":""},"core":{"sourceId":"Item.oDJdxjKhEWn2YFeD"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_9vhma83te86"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566876,"modifiedTime":1669595327752,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"AFmZiGGQHBHCLsFW","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_mxab11qg0q","name":"Livello 3","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["jNAgelo1mJksQeoH","BglFyLKzpZU3PWlO"],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594600647,"modifiedTime":1669595279310,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"BeAcMBsHrpfekBBh"}
{"name":"Spirit Shroud","type":"spell","img":"icons/magic/death/undead-ghost-scream-teal.webp","system":{"description":{"value":"<p>You call forth spirits of the dead, which flit around you for the spell’s duration. The spirits are intangible and invulnerable.</p>\n<p>Until the spell ends, any attack you make deals 1d8 extra damage when you hit a creature within 10 feet of you. This damage is radiant, necrotic, or cold (your choice when you cast the spell). Any creature that takes this damage can’t regain hit points until the start of your next turn.</p>\n<p>In addition, any creature of your choice that you can see that starts its turn within 10 feet of you has its speed reduced by 10 feet until the start of your next turn.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d8 for every two slot levels above 3rd.</p>","chat":"<p>You call forth spirits of the dead, which flit around you for the spell’s duration. The spirits are intangible and invulnerable.</p>\n<p>Until the spell ends, any attack you make deals 1d8 extra damage when you hit a creature within 10 feet of you. This damage is radiant, necrotic, or cold (your choice when you cast the spell). Any creature that takes this damage can’t regain hit points until the start of your next turn.</p>\n<p>In addition, any creature of your choice that you can see that starts its turn within 10 feet of you has its speed reduced by 10 feet until the start of your next turn.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, the damage increases by 1d8 for every two slot levels above 3rd.</p>","unidentified":""},"source":"Tasha’s Cauldron of Everything pg 108","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":"0","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":3,"school":"nec","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":"1d8"}},"effects":[{"_id":"fqbk2lwjgjzzzt07","changes":[{"key":"system.attributes.movement.all","mode":0,"value":"-10","priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/magic/death/undead-ghost-scream-teal.webp","label":"Spirit Shroud","transfer":false,"flags":{"dae":{"selfTarget":false,"stackable":"noneName","durationExpression":"","macroRepeat":"startEveryTurn","specialDuration":[],"transfer":false},"core":{"statusId":""},"dnd5e-helpers":{"rest-effect":"Ignore"},"ActiveAuras":{"isAura":true,"aura":"Enemy","radius":10,"alignment":"","type":"","ignoreSelf":true,"height":true,"hidden":false,"displayTemp":false,"hostile":true,"onlyOnce":true}},"tint":null,"origin":null}],"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3},"flags":{"ddbimporter":{"id":5833696,"definitionId":718581,"entityTypeId":435869154,"dndbeyond":{"lookup":"generic","lookupName":"generic","level":null,"castAtLevel":null},"sources":[{"sourceId":67,"pageNumber":108,"sourceType":1}],"tags":["Damage","Debuff"]},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"core":{"sourceId":"Compendium.world.ddb-darklands-spells.mVAN9sYvlP0LgXqX"},"enhanced-terrain-layer":{"multiple":1,"min":0,"max":0,"environment":""},"midi-qol":{"criticalThreshold":"20","onUseMacroName":"[postActiveEffects]ItemMacro","effectActivation":false,"fumbleThreshold":null},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"favtab":{"isFavorite":false},"itemacro":{"macro":{"_id":null,"name":"Spirit Shroud","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//######################################\n//## https://www.patreon.com/crymic\n//#####################################\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst itemD = lastArg.item;\nconst gameRound = game.combat ? game.combat.round : 0;\n\nif (lastArg.tag === \"OnUse\") {\n    const spellLevel = Math.floor((lastArg.spellLevel - 1) / 2);\n    const title = `Choose your Damage Type:`;\n    const menuOptions = {};\n    menuOptions[\"buttons\"] = [\n        { label: \"Select\", value: true },\n        { label: \"Cancel\", value: false }\n    ];\n    menuOptions[\"inputs\"] = [\n        { type: \"radio\", label: \"Cold Damage\", value: \"cold\", options: \"damageType\" },\n        { type: \"radio\", label: \"Necrotic Damage\", value: \"necrotic\", options: \"damageType\" },\n        { type: \"radio\", label: \"Radiant Damage\", value: \"radiant\", options: \"damageType\" }\n    ];\n    let choices = await warpgate.menu(menuOptions, { title, options: { height: \"100%\" } });\n    let spellButtons = choices.buttons;\n    if (!spellButtons) {\n        let effect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Concentrating\");\n        if (effect) await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n        let spellUpdate = {};\n        let spellSlot;\n        if ((actorData.classes?.warlock) && (castingStat === \"cha\")) spellSlot = \"pact\";\n        else spellSlot = \"spell\" + lastArg.spellLevel;\n        let currentSlot = actorData.spells[spellSlot].value;\n        spellUpdate[`${version > 9 ? \"system\" : \"data\"}.spells.${spellSlot}.value`] = currentSlot + 1;\n        await tactor.update(spellUpdate);\n    }\n    let damageChoice = choices.inputs.filter(Boolean)[0];\n    let effectData = [{\n        changes: [\n            { key: \"flags.dnd5e.DamageBonusMacro\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: `ItemMacro.${itemD.name}`, priority: 20 },\n            { key: \"flags.midi-qol.spiritShroud.name\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: itemD.name, priority: 20 },\n            { key: \"flags.midi-qol.spiritShroud.uuid\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: lastArg.uuid, priority: 20 },\n            { key: \"flags.midi-qol.spiritShroud.level\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: spellLevel, priority: 20 },\n            { key: \"flags.midi-qol.spiritShroud.type\", mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: damageChoice, priority: 20 }\n        ],\n        origin: lastArg.uuid,\n        disabled: false,\n        duration: { rounds: 10, startRound: gameRound, startTime: game.time.worldTime },\n        flags: {\n            dae: { itemData: itemD }\n        },\n        label: itemD.name\n    }];\n    await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: tactor.uuid, effects: effectData });\n} else if (args[0].tag === \"DamageBonus\") {\n    let targetList = lastArg.hitTargets.map(i => i.id);\n    let findTarget = MidiQOL.findNearby(null, tokenD, 10, null).find(i => targetList.includes(i.id));\n    if (!findTarget) return {};\n    let itemList = await tactor.itemTypes.weapon.concat(tactor.itemTypes.spell);\n    let attackList = itemList.reduce((list, item) => {\n        if (![\"ak\"].some(i => (version > 9 ? item.system.actionType : item.data.data.actionType).toLowerCase().includes(i))) return list;\n        else list.push(item.name.toLowerCase());\n        return list;\n    }, []);\n    let legalAttack = attackList.some(i => (itemD.name.toLowerCase()).toLowerCase().includes(i));\n    if (!legalAttack) return {};\n    const spellName = getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.spiritShroud.name\");\n    const spellDice = getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.spiritShroud.level\");\n    const spellOrigin = getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.spiritShroud.uuid\");\n    const damageType = getProperty((version > 9 ? tactor.flags : tactor.data.flags), \"midi-qol.spiritShroud.type\");\n    let effectData = {\n        changes: [\n            { key: \"data.traits.di.value\", mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: `healing`, priority: 20 }\n        ],\n        origin: spellOrigin,\n        disabled: false,\n        transfer: false,\n        flags: { dae: { stackable: \"noneOirign\", specialDuration: [\"turnStartSource\"] } },\n        duration: { rounds: 1, turns: 1, startRound: gameRound, startTime: game.time.worldTime },\n        icon: \"icons/skills/wounds/blood-cells-vessel-red-orange.webp\",\n        label: `Healing Debuff`\n    }\n    let effect = findTarget.actor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Healing Debuff\");\n    if (!effect) await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: findTarget.actor.uuid, effects: [effectData] });\n    let damageDice = await new game.dnd5e.dice.DamageRoll(`${spellDice}d8[${damageType}]`, tactor.getRollData(), { critical: lastArg.isCritical }).evaluate({ async: true });\n    return { damageRoll: damageDice.formula, flavor: `(${spellName} (${CONFIG.DND5E.damageTypes[damageType]}))`, damageList: lastArg.damageList, itemCardId: lastArg.itemCardId };\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_mxab11qg0q"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440676023,"modifiedTime":1669595279310,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"folder":null,"sort":0,"_id":"BglFyLKzpZU3PWlO"}
{"name":"Summon Beast","type":"spell","img":"icons/creatures/mammals/spirit-deer-herd-blue.webp","system":{"description":{"value":"<p>You call forth a bestial spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Bestial Spirit stat block. When you cast the spell, choose an environment: Air, Land, or Water. The creature resembles an animal of your choice that is native to the chosen environment, which determines certain traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 3rd level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>\n<div class=\"Basic-Text-Frame stat-block-finder\">\n<p class=\"Stat-Block-Styles_Stat-Block-Title\">Bestial Spirit</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Metadata\">Small beast</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Armor Class</strong> 11 + the level of the spell (natural armor)</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Hit Points</strong> 20 (Air only) or 30 (Land and Water only) + 5 for each spell level above 2nd</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Speed</strong> 30 ft.; climb 30 ft. (Land only); fly 60 ft. (Air only); swim 30 ft. (Water only)</p>\n<div class=\"stat-block-ability-scores\">\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">STR</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">18</span> <span class=\"stat-block-ability-scores-modifier\">(+4)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">DEX</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">11</span> <span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CON</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span> <span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">INT</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">4</span> <span class=\"stat-block-ability-scores-modifier\">(−3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">WIS</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">14</span> <span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CHA</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">5</span> <span class=\"stat-block-ability-scores-modifier\">(−3)</span></div>\n</div>\n</div>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Senses</strong> @Compendium[dnd5e.rules.Darkvision]{darkvision} 60 ft., passive @Compendium[dnd5e.rules.Using Each Ability]{Perception} 12</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Languages</strong> understands the languages you speak</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data-Last\"><strong>Challenge</strong> — <strong>Proficiency Bonus</strong> equals your bonus</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Flyby (Air Only).</strong></em> The beast doesn’t provoke opportunity attacks when it flies out of an enemy’s reach.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Pack Tactics (Land and Water Only).</strong></em> The beast has advantage on an attack roll against a creature if at least one of the beast’s allies is within 5 feet of the creature and the ally isn’t @Compendium[dnd5e.rules.Incapacitated]{incapacitated}.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Water Breathing (Water Only).</strong></em> The beast can breathe only underwater.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Actions</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Multiattack.</strong></em> The beast makes a number of attacks equal to half this spell’s level (rounded down).</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Maul.</strong> Melee Weapon Attack:</em> your spell attack modifier to hit, reach 5 ft., one target. <em>Hit:</em> 1d8 + 4 + the spell’s level piercing damage.</p>\n</div>","chat":"","unidentified":""},"source":"Tasha’s Cauldron of Everything pg 109","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":2,"school":"con","components":{"value":"a feather, tuft of fur, and fish tail inside a gilded acorn worth at least 200 gp","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"a feather, tuft of fur, and fish tail inside a gilded acorn worth at least 200 gp","consumed":false,"cost":200,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attunement":null},"effects":[{"_id":"rs16exe77mt0wpz5","changes":[{"key":"macro.itemMacro","mode":0,"value":"@item.level","priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/creatures/mammals/spirit-deer-herd-blue.webp","label":"Summon Beast","transfer":false,"flags":{"dae":{"selfTarget":false,"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":["zeroHP"],"transfer":false},"core":{"statusId":""},"dnd5e-helpers":{"rest-effect":"Ignore"},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"tint":null,"origin":null}],"flags":{"ddbimporter":{"id":5854852,"definitionId":721187,"entityTypeId":435869154,"dndbeyond":{"lookup":"generic","lookupName":"generic","level":null,"castAtLevel":null},"sources":[{"sourceId":67,"pageNumber":109,"sourceType":1}],"tags":["Summoning"],"originalName":"Summon Beast","version":"2.9.59","effectsApplied":true},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"enhanced-terrain-layer":{"multiple":1,"min":0,"max":0,"environment":""},"midi-qol":{"onUseMacroName":"","forceCEOn":false,"effectActivation":false},"core":{"sourceId":"Compendium.world.ddb-darklands-spells.moj0JqbIuRx04vNp"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false},"itemacro":{"macro":{"_id":null,"name":"Summon Beast","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//######################################\n//## https://www.patreon.com/crymic\n//#####################################\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorData = tactor.getRollData();\nconst prof = actorData.attributes.prof;\nconst spellLevel = Number(args[1]);\nconst castingStat = actorData.attributes.spellcasting;\nconst castingMod = actorData.abilities[castingStat].mod;\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst summonTarget = \"Bestial Spirit\";\nconst imageAvatar = { \"Land\": \"icons/creatures/magical/construct-iron-stomping-yellow.webp\", \"Water\": \"icons/creatures/magical/spirit-undead-horned-blue.webp\", \"Air\": \"icons/creatures/magical/spirit-undead-ghost-blue.webp\" };\nconst imageToken = { \"Land\": \"icons/creatures/magical/construct-iron-stomping-yellow.webp\", \"Water\": \"icons/creatures/magical/spirit-undead-horned-blue.webp\", \"Air\": \"icons/creatures/magical/spirit-undead-ghost-blue.webp\" };\nlet findActor = game.actors.find(i => i.name === summonTarget);\nlet warpgateCheck = ((game.modules.get(\"warpgate\")) && (game.modules.get(\"warpgate\")?.active)) ? true : false;\nlet sequencerCheck = ((game.modules.get(\"sequencer\")) && (game.modules.get(\"sequencer\")?.active)) ? true : false;\nlet jb2aCheck = ((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active)) || ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) ? true : false;\n\nif (!findActor || !warpgateCheck || !sequencerCheck || !jb2aCheck) {\n    let effect = tactor.effects.find(i => ((i.sourceName === itemD.name) && (version > 9 ? i.label : i.data.label)) === \"Concentrating\");\n    await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n    if (!findActor) ui.notifications.error(`${summonTarget} actor is missing, create an actor named '${summonTarget}'`);\n    if (!warpgateCheck) ui.notifications.error(\"Warpgate Module is missing, Install or Enable it.\");\n    if (!sequencerCheck) ui.notifications.error(\"Sequencer Module is missing, Install or Enable it.\");\n    if (!jb2aCheck) ui.notifications.error(\"JB2A is required [free or paid version], install or Enable one of them\");\n    return;\n}\nlet teleportIn;\nlet teleportOut;\nif (((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active))) {\n    teleportIn = `jb2a.misty_step.01.blue`;\n    teleportOut = `jb2a.misty_step.02.blue`;\n} else if ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) {\n    teleportIn = `jb2a.misty_step.01.green`;\n    teleportOut = `jb2a.misty_step.02.green`;\n}\n\nif (args[0] === \"on\") {\n    await new Dialog({\n        title: itemD.name,\n        content: `<div class=\"form-group\"><label for=\"summon\">Select an Environment:</label><select id=\"summon\"><option value=\"Air\">Air</option><option value=\"Land\">Land</option><option value=\"Water\">Water</option></select></div>`,\n        buttons: {\n            one: {\n                label: 'Summon',\n                callback: async (html) => {\n                    let summon = html.find('select#summon').val();\n                    await game.actors.getName(summonTarget).update({ \"token.name\": `${summon} ${summonTarget}` });\n                    let maxGrid = canvas.grid.size >= 90 ? 90 : canvas.grid.size - 3;\n                    let range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n                        t: \"circle\",\n                        user: game.user.id,\n                        x: tokenD.x + canvas.grid.size / 2,\n                        y: tokenD.y + canvas.grid.size / 2,\n                        direction: 0,\n                        distance: maxGrid,\n                        borderColor: \"#FF0000\"\n                    }]);\n                    let summonHP = (summon === \"Air\" ? 20 : 30) + ((spellLevel - 1) * 5);\n\n                    let summonMove = {\n                        \"Air\": { fly: 60 },\n                        \"Land\": { climb: 30 },\n                        \"Water\": { swim: 30 }\n                    }[summon];\n\n                    let updates = {};\n                    let creatureLayout = {};\n\n                    if (version > 9) {\n                        updates[\"token\"] = {\n                            \"name\": `${summon} ${summonTarget}`,\n                            \"texture.src\": imageToken[summon],\n                            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n                            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n                            \"bar1\": { attribute: \"attributes.hp\" },\n                            \"alpha\": 0\n                        }\n                        updates[\"actor\"] = {                            \n                            \"name\": `${summon} ${summonTarget} ${tactor.name}`,\n                            \"img\": imageAvatar[summon],\n                            \"system.attributes.ac\": { formula: 11 + spellLevel, calc: \"custom\" },\n                            \"system.attributes.hp\": { value: summonHP, max: summonHP, formula: summonHP },\n                            \"system.details.cr\": prof,\n                            \"system.attributes.movement\": summonMove,\n                            \"system.traits.languages\": actorData.traits.languages,\n                            \"flags.warpgate.summonBestial.spell\": itemD.name,\n                            \"flags.warpgate.summonBestial.tokenId\": tokenD.id\n                        }\n                        creatureLayout[\"Item\"] = {\n                            \"Maul\": {\n                                \"system.ability\": \"dex\",\n                                \"system.attackBonus\": castingMod,\n                                \"system.damage.parts\": [[`1d8[piercing] + @abilities.str.mod + ${spellLevel}`, \"piercing\"]]\n                            },\n                            \"Multiattack\": {\n                                \"name\": `Multiattack ${Math.floor(spellLevel / 2)}`,\n                                \"system.description.value\": `The ${summon} ${summonTarget} can use the attacks action ${Math.floor(spellLevel / 2)} per round.`\n                            }\n                        }\n                    } else {\n                        updates[\"token\"] = {\n                            \"name\": `${summon} ${summonTarget}`,\n                            \"img\": imageToken[summon],\n                            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n                            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n                            \"bar1\": { attribute: \"attributes.hp\" },\n                            \"alpha\": 0\n                        }\n                        updates[\"actor\"] = {\n                            \"img\": imageAvatar[summon],\n                            \"name\": `${summon} ${summonTarget} ${tactor.name}`,\n                            \"data.attributes.ac\": { formula: 11 + spellLevel, calc: \"custom\" },\n                            \"data.attributes.hp\": { value: summonHP, max: summonHP, formula: summonHP },\n                            \"data.details.cr\": prof,\n                            \"data.attributes.movement\": summonMove,\n                            \"data.traits.languages\": actorData.traits.languages,\n                            \"flags.warpgate.summonBestial.spell\": itemD.name,\n                            \"flags.warpgate.summonBestial.tokenId\": tokenD.id\n                        }\n                        creatureLayout[\"Item\"] = {\n                            \"Maul\": {\n                                \"data.ability\": \"dex\",\n                                \"data.attackBonus\": castingMod,\n                                \"data.damage.parts\": [[`1d8[piercing] + @abilities.str.mod + ${spellLevel}`, \"piercing\"]]\n                            },\n                            \"Multiattack\": {\n                                \"name\": `Multiattack ${Math.floor(spellLevel / 2)}`,\n                                \"data.description.value\": `The ${summon} ${summonTarget} can use the attacks action ${Math.floor(spellLevel / 2)} per round.`\n                            }\n                        }\n                    }\n\n                    if (summon === \"Air\") {\n                        creatureLayout.Item[\"Pack Tactics\"] = warpgate.CONST.DELETE;\n                        creatureLayout.Item[\"Water Breathing\"] = warpgate.CONST.DELETE;\n                    }\n                    if (summon === \"Land\") {\n                        creatureLayout.Item[\"Flyby\"] = warpgate.CONST.DELETE;\n                        creatureLayout.Item[\"Water Breathing\"] = warpgate.CONST.DELETE;\n                    }\n                    if (summon === \"Water\") {\n                        creatureLayout.Item[\"Flyby\"] = warpgate.CONST.DELETE;\n                    }\n\n                    updates[\"embedded\"] = creatureLayout;\n\n                    async function postEffects(template, token) {\n                        new Sequence()\n                            .animation()\n                            .on(token)\n                            .fadeIn(500)\n                            .play()\n                    }\n\n                    async function myEffectFunction(template, update) {\n                        new Sequence()\n                            .effect()\n                            .file(teleportIn)\n                            .center()\n                            .waitUntilFinished()\n                            .atLocation(template)\n                            .scale(0.5)\n                            .play()\n                    }\n\n                    let callbacks = {\n                        pre: async (template, update) => {\n                            await range[0].delete();\n                            myEffectFunction(template, update);\n                            await warpgate.wait(500);\n                        },\n                        post: async (template, token) => {\n                            await postEffects(template, token);\n                            await warpgate.wait(500);\n                        }\n                    };\n\n                    let options = { controllingActor: tactor };\n\n                    await warpgate.spawn(summonTarget, updates, callbacks, options);\n                }\n            }\n        }\n\n    }).render(true);\n}\n// Delete Summons\nif (args[0] === \"off\") {\n    await wait(1000);\n    console.error(itemD.name, `Turning off`);\n    let findToken = await canvas.tokens.placeables.find(i => (version > 9 ? getProperty(i?.actor?.flags, \"warpgate.control.actor\") : getProperty(i?.actor?.data?.flags, \"warpgate.control.actor\")) === tactor.id && (version > 9 ? getProperty(i?.actor?.flags, \"warpgate.summonBestial.spell\") : getProperty(i?.actor?.data?.flags, \"warpgate.summonBestial.spell\")) === itemD.name );\n    if (!findToken) return {};\n    new Sequence()\n        .effect()\n        .file(teleportOut)\n        .center()\n        .atLocation(findToken)\n        .scale(0.5)\n        .animation()\n        .on(findToken)\n        .fadeOut(1000)\n        .thenDo(async function () {\n            await wait(1500);\n            await warpgate.dismiss(findToken.id, game.canvas.scene.id);\n        })\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_z5cg2twoa1"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566896,"modifiedTime":1669595276591,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"Dujig3erSBaUa1BP","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_q0dobd45dt","name":"Livello 6","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":[],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594692217,"modifiedTime":1669595195143,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"HfwcAQzOUYZfWAnm"}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_ekg2x6xtxds","name":"Livello 7","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":[],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594754133,"modifiedTime":1669595195143,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"NnTnn42qsZHHMiCo"}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_b5zb8a0r72a","name":"Livello 5","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":[],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594666277,"modifiedTime":1669595195143,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"SZjeUbq1oE54X0C5"}
{"name":"Shadow Blade","type":"spell","img":"icons/weapons/swords/sword-runed-glowing.webp","system":{"description":{"value":"<p>You weave together threads of shadow to create a sword of solidified gloom in your hand. This magic sword lasts until the spell ends. It counts as a simple melee weapon with which you are proficient. It deals 2d8 psychic damage on a hit and has the finesse, light, and thrown properties (range 20/60). In addition, when you use the sword to attack a target that is in dim light or darkness, you make the attack roll with advantage.</p>\n<p>If you drop the weapon or throw it, it dissipates at the end of the turn. Thereafter, while the spell persists, you can use a bonus action to cause the sword to reappear in your hand.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a 3rd- or 4th-level spell slot, the damage increases to 3d8. When you cast it using a 5th- or 6th-level spell slot, the damage increases to 4d8. When you cast it using a spell slot of 7th level or higher, the damage increases to 5d8.</p>","chat":"","unidentified":""},"source":"","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":"0","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":2,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attributes":{"spelldc":10}},"effects":[{"_id":"Fi95sPQMG0HMGIC6","flags":{"dae":{"stackable":"none","macroRepeat":"none","transfer":false,"specialDuration":[],"selfTarget":false,"durationExpression":""},"core":{"statusId":""},"dnd5e-helpers":{"rest-effect":"Ignore"},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"changes":[{"key":"macro.itemMacro","mode":0,"value":"@item.level","priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/weapons/swords/sword-runed-glowing.webp","label":"Shadow Blade","origin":"Actor.u49o8dPLH6fi8Lup.OwnedItem.Qhz7k5OIEWkfd97l","tint":null,"transfer":false}],"flags":{"autoanimations":{"killAnim":false,"override":false,"animType":"t1","animName":"","hmAnim":"a1","color":"n1","dtvar":"dt1","explosion":false,"explodeVariant":"ev1","explodeColor":"ec1","explodeRadius":"0","explodeLoop":"1","selfRadius":"5","animTint":"#ffffff","auraOpacity":0.75,"ctaOption":false},"midi-qol":{"onUseMacroName":"","fumbleThreshold":null,"effectActivation":false},"favtab":{"isFavorite":false},"itemacro":{"macro":{"data":{"_id":null,"name":"Shadow Blade","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//#######################################\n// READ FIRST!!!!!!!!!!\n// DAE Macro, use either macro.execute or macro.itemmacro with @item.level\n//#######################################\nconst lastArg = args[args.length - 1];\nconsole.log(lastArg);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst level = Number(args[1]);\nconst damageDice = level > 6 ? Math.ceil(7 / 2 + 1) : Math.ceil(level / 2 + 1);\nconsole.log(damageDice);\n\nif (args[0] === \"on\") {\n    let itemData = [{\n        \"name\": itemD.name,\n        \"type\": \"weapon\",\n        \"img\": itemD.img,\n        \"data\": {\n            \"description\": {\n                \"value\": \"<p>A magical weapon made of Shadows.</p>\",\n                \"chat\": \"\",\n                \"unidentified\": \"\"\n            },\n            \"quantity\": 1,\n            \"weight\": 1,\n            \"equipped\": true,\n            \"identified\": true,\n            \"activation\": {\n                \"type\": \"action\",\n                \"cost\": 1,\n                \"condition\": \"\"\n            },\n            \"range\": {\n                \"value\": 5,\n                \"long\": null,\n                \"units\": \"ft\"\n            },\n            \"uses\": {\n                \"value\": null,\n                \"max\": \"\",\n                \"per\": \"\"\n            },\n            \"actionType\": \"mwak\",\n            \"damage\": {\n                \"parts\": [\n                    [\n                        `${damageDice}d8`,\n                        \"psychic\"\n                    ]\n                ],\n                \"versatile\": \"\"\n            },\n            \"weaponType\": \"simpleM\",\n            \"properties\": {\n                \"fin\": true,\n                \"lgt\": true,\n                \"mgc\": true,\n                \"thr\": true\n            },\n            \"proficient\": true,\n        }\n    }];\n    await tactor.createEmbeddedDocuments(\"Item\", itemData);\n}\n\nif (args[0] === \"off\") {\n    let itemz = tactor.data.items.find(i => i.name === itemD.name && i.type === \"weapon\");\n    if (itemz) await tactor.deleteEmbeddedDocuments('Item', [itemz.id]);\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"_id":null,"name":"Shadow Blade","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//#######################################\n// READ FIRST!!!!!!!!!!\n// DAE Macro, use either macro.execute or macro.itemmacro with @item.level\n//#######################################\nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst level = Number(args[1]);\nconst damageType = \"psychic\";\nconst weaponDamage = `${Math.min(Math.floor((level - 1) / 2) + 2, 5)}d8[${damageType}]`;\n\nif (args[0] === \"on\") {\n    let itemData;\n    if (version > 9) {\n        itemData = {\n            \"name\": itemD.name,\n            \"type\": \"weapon\",\n            \"img\": itemD.img,\n            \"system\": {\n                \"description\": {\n                    \"value\": \"<p>A magical weapon made of Shadows.</p>\"\n                },\n                \"quantity\": 1,\n                \"weight\": 1,\n                \"equipped\": true,\n                \"rarity\": \"uncommon\",\n                \"identified\": true,\n                \"activation\": {\n                    \"type\": \"action\",\n                    \"cost\": 1\n                },\n                \"actionType\": \"mwak\",\n                \"damage\": {\n                    \"parts\": [\n                        [\n                            weaponDamage,\n                            damageType\n                        ]\n                    ],\n                    \"versatile\": \"\"\n                },\n                \"weaponType\": \"simpleM\",\n                \"properties\": {\n                    \"fin\": true,\n                    \"lgt\": true,\n                    \"mgc\": true,\n                    \"thr\": true\n                },\n                \"proficient\": true\n            },\n            \"effects\": [],\n            \"flags\": {\n                \"shadowBlade\": tactor.id,\n                \"midi-qol\": {\n                    \"fumbleThreshold\": null,\n                    \"effectActivation\": false,\n                    \"onUseMacroName\": \"[preItemRoll]ItemMacro\"\n                },\n                \"midiProperties\": {\n                    \"magicdam\": true\n                },\n                \"itemacro\": {\n                    \"macro\": {\n                        \"_id\": null,\n                        \"name\": \"Shadow Blade\",\n                        \"type\": \"script\",\n                        \"author\": \"Tyd5yiqWrRZMvG30\",\n                        \"img\": \"icons/svg/dice-target.svg\",\n                        \"scope\": \"global\",\n                        \"command\": \"if ((args[0].tag === \\\"OnUse\\\") && (args[0].macroPass === \\\"preItemRoll\\\")) {\\n    const tokenD = await fromUuid(args[0].tokenUuid);\\n    const target = await fromUuid(args[0].targetUuids[0]);\\n    const distance = MidiQOL.getDistance(tokenD, target, true, true);\\n    const theItem = await fromUuid(args[0].uuid);\\n    if(distance > 5){\\n        theItem.system.actionType = \\\"rwak\\\";\\n    } else {\\n        theItem.system.actionType = \\\"mwak\\\";\\n    }    \\n}\",\n                        \"folder\": null,\n                        \"sort\": 0,\n                        \"permission\": {\n                            \"default\": 0\n                        },\n                        \"flags\": {}\n                    }\n                }\n            }\n        }\n    } else {\n        itemData = {\n            \"name\": itemD.name,\n            \"type\": \"weapon\",\n            \"img\": itemD.img,\n            \"data\": {\n                \"description\": {\n                    \"value\": \"<p>A magical weapon made of Shadows.</p>\"\n                },\n                \"quantity\": 1,\n                \"weight\": 1,\n                \"equipped\": true,\n                \"rarity\": \"uncommon\",\n                \"identified\": true,\n                \"activation\": {\n                    \"type\": \"action\",\n                    \"cost\": 1\n                },\n                \"actionType\": \"mwak\",\n                \"damage\": {\n                    \"parts\": [\n                        [\n                            weaponDamage,\n                            damageType\n                        ]\n                    ],\n                    \"versatile\": \"\"\n                },\n                \"weaponType\": \"simpleM\",\n                \"properties\": {\n                    \"fin\": true,\n                    \"lgt\": true,\n                    \"mgc\": true,\n                    \"thr\": true\n                },\n                \"proficient\": true\n            },\n            \"effects\": [],\n            \"flags\": {\n                \"shadowBlade\": tactor.id,\n                \"midi-qol\": {\n                    \"fumbleThreshold\": null,\n                    \"effectActivation\": false,\n                    \"onUseMacroName\": \"[preItemRoll]ItemMacro\"\n                },\n                \"midiProperties\": {\n                    \"magicdam\": true\n                },\n                \"itemacro\": {\n                    \"macro\": {\n                        \"_id\": null,\n                        \"name\": \"Shadow Blade\",\n                        \"type\": \"script\",\n                        \"author\": \"Tyd5yiqWrRZMvG30\",\n                        \"img\": \"icons/svg/dice-target.svg\",\n                        \"scope\": \"global\",\n                        \"command\": \"if ((args[0].tag === \\\"OnUse\\\") && (args[0].macroPass === \\\"preItemRoll\\\")) {\\n    const tokenD = await fromUuid(args[0].tokenUuid);\\n    const target = await fromUuid(args[0].targetUuids[0]);\\n    const distance = MidiQOL.getDistance(tokenD, target, true, true);\\n    const theItem = await fromUuid(args[0].uuid);\\n    if(distance > 5){\\n        theItem.data.data.actionType = \\\"rwak\\\";\\n    } else {\\n        theItem.data.data.actionType = \\\"mwak\\\";\\n    }    \\n}\",\n                        \"folder\": null,\n                        \"sort\": 0,\n                        \"permission\": {\n                            \"default\": 0\n                        },\n                        \"flags\": {}\n                    }\n                }\n            }\n        }\n    }\n    await tactor.createEmbeddedDocuments(\"Item\", [itemData]);\n    return ui.notifications.error(`${itemD.name} weapon has been created in your inventory`);\n}\n\nif (args[0] === \"off\") {\n    let itemz = tactor.itemTypes.weapon.find(i => (version > 9 ? i.flags.shadowBlade : i.data.flags.shadowBlade) === tactor.id);\n    if (itemz) await tactor.deleteEmbeddedDocuments('Item', [itemz.id]);\n    return ui.notifications.error(`${itemD.name} weapon has been remove from your inventory`);\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"core":{"sourceId":"Item.Qhz7k5OIEWkfd97l"},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"enhanced-terrain-layer":{"multiple":1,"min":0,"max":0,"environment":""},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false},"cf":{"id":"temp_z5cg2twoa1"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566881,"modifiedTime":1669595282803,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"Us206ErcljczYTaj","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_9vhma83te86","name":"Trucchetti","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["AFmZiGGQHBHCLsFW"],"children":[]}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669595303821,"modifiedTime":1669595327752,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"e1fuT1f5lWTpcM17"}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_u3ahldi5pfq","name":"Livello 8","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":[],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594715132,"modifiedTime":1669595195143,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"j7FXkR1smTYYstBZ"}
{"name":"Summon Fey","type":"spell","img":"icons/creatures/magical/humanoid-silhouette-aliens-green.webp","system":{"description":{"value":"<p>You call forth a fey spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Fey Spirit stat block. When you cast the spell, choose a mood: Fuming, Mirthful, or Tricksy. The creature resembles a fey creature of your choice marked by the chosen mood, which determines one of the traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>","chat":"<p>You call forth a fey spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Fey Spirit stat block. When you cast the spell, choose a mood: Fuming, Mirthful, or Tricksy. The creature resembles a fey creature of your choice marked by the chosen mood, which determines one of the traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 4th level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>\n<div class=\"Basic-Text-Frame stat-block-finder\">\n<p class=\"Stat-Block-Styles_Stat-Block-Title\">Fey Spirit</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Metadata\">Small fey</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Armor Class</strong> 12 + the level of the spell (natural armor)</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Hit Points</strong> 30 + 10 for each spell level above 3rd</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Speed</strong> 40 ft.</p>\n<div class=\"stat-block-ability-scores\">\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">STR</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">13</span><span class=\"stat-block-ability-scores-modifier\">(+1)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">DEX</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CON</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">14</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">INT</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">14</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">WIS</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">11</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CHA</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n</div>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Condition Immunities</strong> charmed</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Senses</strong> darkvision 60 ft., passive Perception 10</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Languages</strong> Sylvan, understands the languages you speak</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data-Last\"><strong>Challenge</strong> — <strong>Proficiency Bonus</strong> equals your bonus</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Actions</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Multiattack.</strong></em> The fey makes a number of attacks equal to half this spell’s level (rounded down).</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Shortsword.</strong> Melee Weapon Attack:</em> your spell attack modifier to hit, reach 5 ft., one target. <em>Hit:</em> 1d6 + 3 + the spell’s level piercing damage + 1d6 force damage.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Bonus Actions</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><em><strong>Fey Step.</strong></em> The fey magically teleports up to 30 feet to an unoccupied space it can see. Then one of the following effects occurs, based on the fey’s chosen mood:</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Fuming.</strong> The fey has advantage on the next attack roll it makes before the end of this turn.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Mirthful.</strong> The fey can force one creature it can see within 10 feet of it to make a Wisdom saving throw against your spell save DC. Unless the save succeeds, the target is charmed by you and the fey for 1 minute or until the target takes any damage.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Body\"><strong>Tricksy.</strong> The fey can fill a 5-foot cube within 5 feet of it with magical darkness, which lasts until the end of its next turn.</p>\n</div>","unidentified":""},"source":"Tasha’s Cauldron of Everything pg 112","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":"0","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":"0","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":3,"school":"con","components":{"value":"a gilded flower worth at least 300 gp","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"a gilded flower worth at least 300 gp","consumed":false,"cost":300,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""},"attunement":null},"effects":[{"_id":"dzl1xylc2ygb0icu","changes":[{"key":"macro.itemMacro","mode":0,"value":"@item.level","priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/creatures/magical/humanoid-silhouette-aliens-green.webp","label":"Summon Fey","transfer":false,"flags":{"core":{"statusId":""},"dae":{"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[],"transfer":false,"selfTarget":false},"dnd5e-helpers":{"rest-effect":"Ignore"},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"tint":null,"origin":null}],"flags":{"ddbimporter":{"id":5855036,"definitionId":721204,"entityTypeId":435869154,"dndbeyond":{"lookup":"generic","lookupName":"generic","level":null,"castAtLevel":null},"sources":[{"sourceId":67,"pageNumber":112,"sourceType":1}],"tags":["Summoning"]},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"core":{"sourceId":"Compendium.world.ddb-darklands-spells.FtmamvZrJLabRCbp"},"midi-qol":{"effectActivation":false},"enhanced-terrain-layer":{"multiple":null,"elevation":null,"depth":null,"environment":""},"midiProperties":{"nodam":false,"halfdam":false,"fulldam":false,"rollOther":false,"critOther":false,"concentration":false,"magicdam":false,"magiceffect":false,"toggleEffect":false},"itemacro":{"macro":{"data":{"_id":null,"name":"Summon Fey","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//DAE Item Macro Execute, value = @item.level\n// Set spell to self cast, no damage/attack roll\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorData = tactor.getRollData();\nconst prof = actorData.attributes.prof;\nconst spellLevel = Number(args[1]);\nconst castingStat = actorData.attributes.spellcasting;\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst summonTarget = \"Fey Spirit\";\nconst imageAvatar = { \"Fuming\": \"graphics/tokens/npc/fey_spirit.Avatar.webp\", \"Mirthful\": \"graphics/tokens/npc/fey_spirit_3.Avatar.webp\", \"Tricksy\": \"graphics/tokens/npc/fey_spirit_2.Avatar.webp\" };\nconst imageToken = { \"Fuming\": \"graphics/tokens/npc/fey_spirit.Token.webp\", \"Mirthful\": \"graphics/tokens/npc/fey_spirit_3.Token.webp\", \"Tricksy\": \"graphics/tokens/npc/fey_spirit_2.Token.webp\" };\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: itemD.name,\n        content: `<div class=\"form-group\"><label for=\"summon\">Select a Mood:</label><select id=\"summon\"><option value=\"Fuming\">Fuming</option><option value=\"Mirthful\">Mirthful</option><option value=\"Tricksy\">Tricksy</option></select></div>`,\n        buttons: {\n            one: {\n                label: 'Summon',\n                callback: async (html) => {\n                    let mood = html.find('select#summon').val();\n                    await game.actors.getName(summonTarget).update({ \"token.name\": `${mood} ${summonTarget}` });\n                    let maxGrid = canvas.grid.size >= 84 ? 84 : canvas.grid.size - 3;\n                    let range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n                        t: \"circle\",\n                        user: game.user.id,\n                        x: tokenD.x + canvas.grid.size / 2,\n                        y: tokenD.y + canvas.grid.size / 2,\n                        direction: 0,\n                        distance: maxGrid,\n                        borderColor: \"#FF0000\"\n                    }]);\n                    let updates = {\n                        token: {\n                            \"name\": `${mood} ${summonTarget}`,\n                            \"img\": imageToken[mood],\n                            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n                            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n                            \"bar1\": { attribute: \"attributes.hp\" },\n                            \"alpha\": 0\n                        },\n                        actor: {\n                            \"name\": `${mood} ${summonTarget} ${tactor.name}`,\n                            \"img\": imageAvatar[mood],\n                            \"data.attributes.hp\": { value: spellLevel * 10, max: spellLevel * 10, formula: spellLevel * 10 },\n                            \"data.attributes.ac\": { calc: \"natural\", flat: 12 + spellLevel },\n                            \"data.details.cr\": prof,\n                            \"flags.summons.actorId\": tactor.id\n                        }\n                    }\n                    let creatureLayout = {\n                        Item: {\n                            \"Shortsword\": {\n                                \"data.damage.parts\": [[`1d6[piercing] + @mod + ${spellLevel}`, \"piercing\"], [`1d6[force]`, \"force\"]]\n                            },\n                            \"Multiattack\": {\n                                \"name\": `Multiattack ${Math.floor(spellLevel / 2)}`,\n                                \"data.description.value\": `The fey can use the attacks action ${Math.floor(spellLevel / 2)} per round.`\n                            }\n                        }\n                    }\n                    let abilityList = [\"Fuming\", \"Mirthful\", \"Tricksy\"].filter(i => i !== mood);\n                    for (ability of abilityList) {\n                        creatureLayout.Item[ability] = warpgate.CONST.DELETE;\n                    }\n                    updates[\"embedded\"] = creatureLayout;\n\n                    async function postEffects(template, token) {\n                        new Sequence()\n                            .animation()\n                            .on(token)\n                            .fadeIn(500)\n                            .play()\n                    }\n\n                    async function myEffectFunction(template, update) {\n                        new Sequence()\n                            .effect()\n                            .file(\"jb2a.misty_step.01.grey\")\n                            .center()\n                            .waitUntilFinished()\n                            .atLocation(template)\n                            .scale(0.5)\n                            .play()\n                    }\n\n                    let callbacks = {\n                        pre: async (template, update) => {\n                            await range[0].delete();\n                            myEffectFunction(template, update);\n                            await warpgate.wait(500);\n                        },\n                        post: async (template, token) => {\n                            console.warn(\"callback post\", template, token);\n                            await postEffects(template, token);\n                            await warpgate.wait(500);\n                        }\n                    };\n\n                    let options = { controllingActor: tactor };\n\n                    await warpgate.spawn(summonTarget, updates, callbacks, options);\n                }\n            }\n        }\n\n    }).render(true);\n}\n\n// Delete Spitirual Weapon and template\nif (args[0] === \"off\") {\n    let findToken = canvas.tokens.placeables.find(i => i.actor.data.flags?.summons?.actorId === tactor.id);\n    if (!findToken) return {};\n    await wait(1000);\n    new Sequence()\n        .effect()        \n        .file(\"jb2a.misty_step.02.grey\")\n        .center()\n        .atLocation(findToken)\n        .scale(findToken.data.width / 2)\n        .animation()\n        .on(findToken)\n        .fadeOut(1000)\n        .thenDo(async function () {\n            await wait(1500);\n            await findToken.document.delete();\n        })\n        .play()\n\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"_id":null,"name":"Summon Fey","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"//######################################\n//## https://www.patreon.com/crymic\n//#####################################\nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorData = tactor.getRollData();\nconst prof = actorData.attributes.prof;\nconst spellLevel = Number(args[1]);\nconst castingStat = actorData.attributes.spellcasting;\nconst castingMod = actorData.abilities[castingStat].mod;\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst summonTarget = \"Fey Spirit\";\nconst imageAvatar = { \"Fuming\": \"icons/creatures/magical/construct-golem-stone-blue.webp\", \"Mirthful\": \"icons/creatures/magical/construct-stone-earth-gray.webp\", \"Tricksy\": \"icons/creatures/magical/humanoid-silhouette-glowing-pink.webp\" };\nconst imageToken = { \"Fuming\": \"icons/creatures/magical/construct-golem-stone-blue.webp\", \"Mirthful\": \"icons/creatures/magical/construct-stone-earth-gray.webp\", \"Tricksy\": \"icons/creatures/magical/humanoid-silhouette-glowing-pink.webp\" };\nlet findActor = game.actors.find(i => i.name === summonTarget);\nlet warpgateCheck = ((game.modules.get(\"warpgate\")) && (game.modules.get(\"warpgate\")?.active)) ? true : false;\nlet sequencerCheck = ((game.modules.get(\"sequencer\")) && (game.modules.get(\"sequencer\")?.active)) ? true : false;\nlet jb2aCheck = ((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active)) || ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) ? true : false;\n\nif (!findActor || !warpgateCheck || !sequencerCheck || !jb2aCheck) {\n    let effect = tactor.effects.find(i => ((i.sourceName === itemD.name) && (version > 9 ? i.label : i.data.label)) === \"Concentrating\");\n    await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n    if (!findActor) ui.notifications.error(`${summonTarget} actor is missing, create an actor named '${summonTarget}'`);\n    if (!warpgateCheck) ui.notifications.error(\"Warpgate Module is missing, Install or Enable it.\");\n    if (!sequencerCheck) ui.notifications.error(\"Sequencer Module is missing, Install or Enable it.\");\n    if (!jb2aCheck) ui.notifications.error(\"JB2A is required [free or paid version], install or Enable one of them\");\n    return;\n}\nlet teleportIn;\nlet teleportOut;\nif (((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active))) {\n    teleportIn = `jb2a.misty_step.01.blue`;\n    teleportOut = `jb2a.misty_step.02.blue`;\n}\n\nif ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) {\n    teleportIn = `jb2a.misty_step.01.grey`;\n    teleportOut = `jb2a.misty_step.02.grey`;\n}\n\nif (args[0] === \"on\") {\n    new Dialog({\n        title: itemD.name,\n        content: `<div class=\"form-group\"><label for=\"summon\">Select a Mood:</label><select id=\"summon\"><option value=\"Fuming\">Fuming</option><option value=\"Mirthful\">Mirthful</option><option value=\"Tricksy\">Tricksy</option></select></div>`,\n        buttons: {\n            one: {\n                label: 'Summon',\n                callback: async (html) => {\n                    let mood = html.find('select#summon').val();\n                    await game.actors.getName(summonTarget).update({ \"token.name\": `${mood} ${summonTarget}` });\n                    let maxGrid = canvas.grid.size >= 84 ? 84 : canvas.grid.size - 3;\n                    let range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n                        t: \"circle\",\n                        user: game.user.id,\n                        x: tokenD.x + canvas.grid.size / 2,\n                        y: tokenD.y + canvas.grid.size / 2,\n                        direction: 0,\n                        distance: maxGrid,\n                        borderColor: \"#FF0000\"\n                    }]);\n                    let updates = {};\n                    let creatureLayout = {};\n                    if (version > 9) {\n                        updates[\"token\"] = {\n                            \"name\": `${mood} ${summonTarget}`,\n                            \"texture.src\": imageToken[mood],\n                            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n                            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n                            \"bar1\": { attribute: \"attributes.hp\" },\n                            \"alpha\": 0\n                        }\n                        updates[\"actor\"] = {\n                            \"name\": `${mood} ${summonTarget} ${tactor.name}`,\n                            \"img\": imageAvatar[mood],\n                            \"system.attributes.hp\": { value: spellLevel * 10, max: spellLevel * 10, formula: spellLevel * 10 },\n                            \"system.attributes.ac\": { calc: \"natural\", flat: 12 + spellLevel },\n                            \"system.details.cr\": prof,\n                            \"flags.warpgate.summonFey.spell\": itemD.name\n                        }\n                        creatureLayout[\"Item\"] = {\n                            \"Shortsword\": {\n                                \"system.ability\": \"wis\",\n                                \"system.attackBonus\": castingMod,\n                                \"system.damage.parts\": [[`1d6[piercing] + @mod + ${spellLevel}`, \"piercing\"], [`1d6[force]`, \"force\"]]\n                            },\n                            \"Multiattack\": {\n                                \"name\": `Multiattack ${Math.floor(spellLevel / 2)}`,\n                                \"system.description.value\": `The fey can use the attacks action ${Math.floor(spellLevel / 2)} per round.`\n                            }\n                        }\n                    } else {\n                        updates[\"token\"] = {\n                            \"name\": `${mood} ${summonTarget}`,\n                            \"img\": imageToken[mood],\n                            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n                            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n                            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n                            \"bar1\": { attribute: \"attributes.hp\" },\n                            \"alpha\": 0\n                        }\n                        updates[\"actor\"] = {\n                            \"name\": `${mood} ${summonTarget} ${tactor.name}`,\n                            \"img\": imageAvatar[mood],\n                            \"data.attributes.hp\": { value: spellLevel * 10, max: spellLevel * 10, formula: spellLevel * 10 },\n                            \"data.attributes.ac\": { calc: \"natural\", flat: 12 + spellLevel },\n                            \"data.details.cr\": prof,\n                            \"flags.warpgate.summonFey.spell\": itemD.name\n                        }\n                        creatureLayout[\"Item\"] = {\n                            \"Shortsword\": {\n                                \"data.ability\": \"wis\",\n                                \"data.attackBonus\": castingMod,\n                                \"data.damage.parts\": [[`1d6[piercing] + @mod + ${spellLevel}`, \"piercing\"], [`1d6[force]`, \"force\"]]\n                            },\n                            \"Multiattack\": {\n                                \"name\": `Multiattack ${Math.floor(spellLevel / 2)}`,\n                                \"data.description.value\": `The fey can use the attacks action ${Math.floor(spellLevel / 2)} per round.`\n                            }\n                        }\n                    }\n\n                    let abilityList = [\"Fuming\", \"Mirthful\", \"Tricksy\"].filter(i => i !== mood);\n                    for (let ability of abilityList) {\n                        creatureLayout.Item[ability] = warpgate.CONST.DELETE;\n                    }\n                    updates[\"embedded\"] = creatureLayout;\n\n                    async function postEffects(template, token) {\n                        new Sequence()\n                            .animation()\n                            .on(token)\n                            .fadeIn(500)\n                            .play()\n                    }\n\n                    async function myEffectFunction(template, update) {\n                        new Sequence()\n                            .effect()\n                            .file(teleportIn)\n                            .center()\n                            .waitUntilFinished()\n                            .atLocation(template)\n                            .scale(0.5)\n                            .play()\n                    }\n\n                    let callbacks = {\n                        pre: async (template, update) => {\n                            await range[0].delete();\n                            myEffectFunction(template, update);\n                            await warpgate.wait(500);\n                        },\n                        post: async (template, token) => {\n                            console.warn(\"callback post\", template, token);\n                            await postEffects(template, token);\n                            await warpgate.wait(500);\n                        }\n                    };\n\n                    let options = { controllingActor: tactor };\n\n                    await warpgate.spawn(summonTarget, updates, callbacks, options);\n                }\n            }\n        }\n\n    }).render(true);\n}\n\n// Delete Summons\nif (args[0] === \"off\") {\n    let findToken = await canvas.tokens.placeables.find(i => (version > 9 ? getProperty(i?.actor?.flags, \"warpgate.control.actor\") : getProperty(i?.actor?.data?.flags, \"warpgate.control.actor\")) === tactor.id && (version > 9 ? getProperty(i?.actor?.flags, \"warpgate.summonFey.spell\") : getProperty(i?.actor?.data?.flags, \"warpgate.summonFey.spell\")) === itemD.name);\n    if (!findToken) return {};\n    await wait(1000);\n    new Sequence()\n        .effect()\n        .file(teleportOut)\n        .center()\n        .atLocation(findToken)\n        .scale(0.5)\n        .animation()\n        .on(findToken)\n        .fadeOut(1000)\n        .thenDo(async function () {\n            await wait(1500);\n            await warpgate.dismiss(findToken.id, game.canvas.scene.id);\n        })\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"favtab":{"isFavorite":false},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_mxab11qg0q"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566901,"modifiedTime":1669595264902,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"jNAgelo1mJksQeoH","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_jw1uqx82njo","name":"Livello 9","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":[],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594766878,"modifiedTime":1669595195143,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"jlr4gz4KXx8xhEMd"}
{"name":"Chromatic Orb","type":"spell","img":"icons/magic/unholy/orb-beam-pink.webp","system":{"description":{"value":"<p>You hurl a 4-inch-diameter sphere of energy at a creature that you can see within range. You choose acid, cold, fire, lightning, poison, or thunder for the type of orb you create, and then make a ranged spell attack against the target. If the attack hits, the creature takes 3d8 damage of the type you chose.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st.</p>","chat":"<p>You hurl a 4-inch-diameter sphere of energy at a creature that you can see within range. You choose acid, cold, fire, lightning, poison, or thunder for the type of orb you create, and then make a ranged spell attack against the target. If the attack hits, the creature takes 3d8 damage of the type you chose.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, the damage increases by 1d8 for each slot level above 1st.</p>","unidentified":""},"source":"Player's Handbook pg 221","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":null,"units":""},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":90,"long":null,"units":"ft"},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"rsak","attackBonus":"","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["2d8[poison]","poison"]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":1,"school":"evo","components":{"value":"a diamond worth at least 50 gp","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"a diamond worth at least 50 gp","consumed":false,"cost":50,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":"1d8"}},"effects":[],"flags":{"ddbimporter":{"id":290,"definitionId":2312,"entityTypeId":420821570,"dndbeyond":{"lookup":"feat","lookupName":"Magic Initiate (Wizard)","lookupId":63,"level":1,"ability":"int","mod":4,"dc":14,"overrideDC":false,"id":290,"entityTypeId":420821570,"healingBoost":0},"sources":[{"sourceId":2,"pageNumber":221,"sourceType":1}],"tags":["Damage"]},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"itemacro":{"macro":{"data":{"_id":null,"name":"Chromatic Orb","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst damage_types = [\"acid\", \"cold\", \"fire\", \"lightning\", \"poison\", \"thunder\"];\nconst lastArg = args[args.length - 1];\nasync function choose(options = [], prompt = ``) {\n  let value = await new Promise((resolve) => {\n\n    let dialog_options = (options[0] instanceof Array)\n      ? options.map(o => `<option value=\"${o[0]}\">${o[1]}</option>`).join(``)\n      : options.map(o => `<option value=\"${o}\">${o}</option>`).join(``);\n\n    let content = `<form><div class=\"form-group\"><label for=\"choice\">${prompt}</label><select id=\"choice\">${dialog_options}</select></div></form>`;\n\n    new Dialog({\n      content,\n      buttons: { OK: { label: `OK`, callback: async (html) => { resolve(html.find('#choice').val()); } } }\n    }).render(true);\n  });\n  return value;\n}\n\nif (args[0].macroPass === \"preDamageRoll\") {\n  let itemD = await fromUuid(lastArg.uuid);\n  let damageType = await choose(damage_types, 'Choose Damage Type : ');\n  let level = Number(lastArg.spellLevel) + 2;\n  itemD.data.data.damage.parts[0][0] = `${level}d8[${damageType}]`;\n  itemD.data.data.damage.parts[0][1] = damageType;\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"_id":null,"name":"Chromatic Orb","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"// thanks to Kekilla for an great dialog macro.\n// Midi-qol on use Chromatic Orb, It handles damage. \nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nif(args[0].hitTargets.length === 0) return {};\nlet choice = false;\nlet elementImg = {\n  acid: \"icons/magic/acid/projectile-smoke-glowing.webp\",\n  cold: \"icons/magic/water/projectile-ice-snowball.webp\",\n  fire: \"icons/magic/fire/projectile-fireball-smoke-orange.webp\",  \n  lightning: \"icons/magic/lightning/projectile-orb-blue.webp\",\n  poison : \"icons/magic/unholy/projectile-missile-green.webp\",\n  thunder: \"icons/magic/air/air-wave-gust-blue.webp\"\n};\nlet elementList = [\"acid\", \"cold\", \"fire\", \"lightning\", \"poison\", \"thunder\"].reduce((list, element) => {\n  list[element] = {icon: `<img style=\"display:block; width:100%; height:auto;\" src=\"${elementImg[element]}\" title=\"${capitalizeFirstLetter(element)}\">`, callback: () => choice = element }\n  return list;\n}, {});\n\nfunction capitalizeFirstLetter(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nif (args[0].macroPass === \"preDamageRoll\") {\n  let itemD = await fromUuid(lastArg.uuid);\n  let damageType = await new Promise((resolve) => {\n  let x = new Dialog({\n      title: `${itemD.name} : Pick an Element`,      \n      buttons: elementList,\n      default: \"cancel\",\n      close: async () => {\n        return resolve(choice);\n      }\n    });\n    x.position.height = 100;\n   return x.render(true);\n  });\n  let level = Number(lastArg.spellLevel) + 2;\n  let damageUpdate = `${level}d8[${damageType}]`;\n  if (version > 9) {\n    itemD.system.damage.parts[0][0] = damageUpdate;\n    itemD.system.damage.parts[0][1] = damageType;\n  } else {\n    itemD.data.data.damage.parts[0][0] = damageUpdate;\n    itemD.data.data.damage.parts[0][1] = damageType;\n  }\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"midi-qol":{"onUseMacroName":"[preDamageRoll]ItemMacro","criticalThreshold":"20","forceCEOff":false,"effectActivation":false,"fumbleThreshold":null},"favtab":{"isFavorite":true},"enhanced-terrain-layer":{"multiple":1,"min":0,"max":0,"environment":"","elevation":null,"depth":null},"autoanimations":{"killAnim":false,"below":false,"override":true,"targetToken":{"enable":false},"sourceToken":{"enable":false},"allSounds":{"item":{"enableAudio":false}},"autoOverride":{"enable":false},"version":4,"animType":"static","animation":"02","color":"random","explosions":{"enable":false},"options":{"staticType":"target","variant":"01","repeat":1,"delay":250,"scale":1,"enableCustom":false,"customPath":"","menuType":"spell"},"audio":{"a01":{"enable":false,"file":"","delay":0,"volume":0.25},"e01":{"enable":false,"file":"","delay":0,"volume":0.25}}},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_hck378qhg4c"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566873,"modifiedTime":1669595330220,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"jmHsB7UE3g11NlOL","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"Summon Aberration","type":"spell","img":"icons/creatures/unholy/demon-fanged-horned-yellow.webp","system":{"description":{"value":"<p>You call forth an aberrant spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Aberrant Spirit stat block. When you cast the spell, choose Beholderkin, Slaad, or Star Spawn. The creature resembles an aberration of that kind, which determines certain traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 5th level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>\n<div class=\"Basic-Text-Frame stat-block-finder\">\n<p class=\"Stat-Block-Styles_Stat-Block-Title\">Aberrant Spirit</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Metadata\">Medium aberration</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Armor Class</strong> 11 + the level of the spell (natural armor)</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Hit Points</strong> 40 + 10 for each spell level above 4th</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Speed</strong> 30 ft.; fly 30 ft. (hover) (Beholderkin only)</p>\n<div class=\"stat-block-ability-scores\">\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">STR</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">DEX</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">10</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CON</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">15</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">INT</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">WIS</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">10</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CHA</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">6</span><span class=\"stat-block-ability-scores-modifier\">(-2)</span></div>\n</div>\n</div>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Damage Immunities</strong> psychic</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Senses</strong> darkvision 60 ft., passive Perception 10</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Languages</strong> Deep Speech, understands the languages you speak</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data-Last\"><strong>Challenge</strong> — <strong>Proficiency Bonus</strong> equals your bonus</p>\n<p><em><strong>Regeneration (Slaad Only).</strong></em> The aberration regains 5 hit points at the start of its turn if it has at least 1 hit point.</p>\n<p><em><strong>Whispering Aura (Star Spawn Only).</strong></em> At the start of each of the aberration’s turns, each creature within 5 feet of the aberration must succeed on a Wisdom saving throw against your spell save DC or take 2d6 psychic damage, provided that the aberration isn’t incapacitated.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Actions</p>\n<p><em><strong>Multiattack.</strong></em> The aberration makes a number of attacks equal to half this spell’s level (rounded down).</p>\n<p><em><strong>Claws (Slaad Only).</strong>Melee Weapon Attack:</em> your spell attack modifier to hit, reach 5 ft., one target. <em>Hit:</em> 1d10 + 3 + the spell’s level slashing damage. If the target is a creature, it can’t regain hit points until the start of the aberration’s next turn.</p>\n<p><em><strong>Eye Ray (Beholderkin Only).</strong>Ranged Spell Attack:</em> your spell attack modifier to hit, range 150 ft., one creature. <em>Hit:</em> 1d8 + 3 + the spell’s level psychic damage.</p>\n<p><em><strong>Psychic Slam (Star Spawn Only).</strong>Melee Spell Attack:</em> your spell attack modifier to hit, reach 5 ft., one creature. <em>Hit:</em> 1d8 + 3 + the spell’s level psychic damage.</p>\n</div>","chat":"<p>You call forth an aberrant spirit. It manifests in an unoccupied space that you can see within range. This corporeal form uses the Aberrant Spirit stat block. When you cast the spell, choose Beholderkin, Slaad, or Star Spawn. The creature resembles an aberration of that kind, which determines certain traits in its stat block. The creature disappears when it drops to 0 hit points or when the spell ends.</p>\n<p>The creature is an ally to you and your companions. In combat, the creature shares your initiative count, but it takes its turn immediately after yours. It obeys your verbal commands (no action required by you). If you don’t issue any, it takes the Dodge action and uses its move to avoid danger.</p>\n<p><em><strong>At Higher Levels.</strong></em> When you cast this spell using a spell slot of 5th level or higher, use the higher level wherever the spell’s level appears in the stat block.</p>\n<div class=\"Basic-Text-Frame stat-block-finder\">\n<p class=\"Stat-Block-Styles_Stat-Block-Title\">Aberrant Spirit</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Metadata\">Medium aberration</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Armor Class</strong> 11 + the level of the spell (natural armor)</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Hit Points</strong> 40 + 10 for each spell level above 4th</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Speed</strong> 30 ft.; fly 30 ft. (hover) (Beholderkin only)</p>\n<div class=\"stat-block-ability-scores\">\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">STR</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">DEX</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">10</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CON</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">15</span><span class=\"stat-block-ability-scores-modifier\">(+2)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">INT</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">16</span><span class=\"stat-block-ability-scores-modifier\">(+3)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">WIS</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">10</span><span class=\"stat-block-ability-scores-modifier\">(+0)</span></div>\n</div>\n<div class=\"stat-block-ability-scores-stat\">\n<div class=\"stat-block-ability-scores-heading\">CHA</div>\n<div class=\"stat-block-ability-scores-data\"><span class=\"stat-block-ability-scores-score\">6</span><span class=\"stat-block-ability-scores-modifier\">(-2)</span></div>\n</div>\n</div>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Damage Immunities</strong> psychic</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Senses</strong> darkvision 60 ft., passive Perception 10</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data\"><strong>Languages</strong> Deep Speech, understands the languages you speak</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Data-Last\"><strong>Challenge</strong> — <strong>Proficiency Bonus</strong> equals your bonus</p>\n<p><em><strong>Regeneration (Slaad Only).</strong></em> The aberration regains 5 hit points at the start of its turn if it has at least 1 hit point.</p>\n<p><em><strong>Whispering Aura (Star Spawn Only).</strong></em> At the start of each of the aberration’s turns, each creature within 5 feet of the aberration must succeed on a Wisdom saving throw against your spell save DC or take 2d6 psychic damage, provided that the aberration isn’t incapacitated.</p>\n<p class=\"Stat-Block-Styles_Stat-Block-Heading\">Actions</p>\n<p><em><strong>Multiattack.</strong></em> The aberration makes a number of attacks equal to half this spell’s level (rounded down).</p>\n<p><em><strong>Claws (Slaad Only).</strong>Melee Weapon Attack:</em> your spell attack modifier to hit, reach 5 ft., one target. <em>Hit:</em> 1d10 + 3 + the spell’s level slashing damage. If the target is a creature, it can’t regain hit points until the start of the aberration’s next turn.</p>\n<p><em><strong>Eye Ray (Beholderkin Only).</strong>Ranged Spell Attack:</em> your spell attack modifier to hit, range 150 ft., one creature. <em>Hit:</em> 1d8 + 3 + the spell’s level psychic damage.</p>\n<p><em><strong>Psychic Slam (Star Spawn Only).</strong>Melee Spell Attack:</em> your spell attack modifier to hit, reach 5 ft., one creature. <em>Hit:</em> 1d8 + 3 + the spell’s level psychic damage.</p>\n</div>","unidentified":""},"source":"Tasha’s Cauldron of Everything pg 109","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":90,"long":null,"units":"ft"},"uses":{"value":0,"max":"0","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":null},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"level":4,"school":"con","components":{"value":"a pickled tentacle and an eyeball in a platinum-inlaid vial worth at least 400 gp","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"a pickled tentacle and an eyeball in a platinum-inlaid vial worth at least 400 gp","consumed":false,"cost":400,"supply":0},"preparation":{"mode":"pact","prepared":true},"scaling":{"mode":"none","formula":""},"attunement":null},"effects":[{"_id":"akzjwp78i5wglvd7","changes":[{"key":"macro.itemMacro","mode":0,"value":"@item.level","priority":20}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/creatures/unholy/demon-fanged-horned-yellow.webp","label":"Summon Aberration","transfer":false,"flags":{"core":{"statusId":""},"dae":{"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[],"transfer":false},"dnd5e-helpers":{"rest-effect":"Ignore"},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"tint":null,"origin":null}],"flags":{"ddbimporter":{"id":5833900,"definitionId":718613,"entityTypeId":435869154,"dndbeyond":{"lookup":"generic","lookupName":"generic","level":null,"castAtLevel":null},"sources":[{"sourceId":67,"pageNumber":109,"sourceType":1}],"tags":["Summoning"]},"betterRolls5e":{"quickVersatile":{"altValue":true},"quickCharges":{"value":{"use":true,"resource":true},"altValue":{"use":true,"resource":true}}},"core":{"sourceId":"Compendium.world.ddb-darklands-spells.6J5iLtMY6nQ3wSAO"},"midi-qol":{"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false},"favtab":{"isFavorite":true},"enhanced-terrain-layer":{"multiple":null,"elevation":null,"depth":null,"environment":""},"itemacro":{"macro":{"data":{"_id":null,"name":"Summon Aberration","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorData = tactor.getRollData();\nconst spellLevel = Number(args[1]);\nconst castingStat = actorData.attributes.spellcasting;\nconst castingItem = lastArg.efData.flags.dae.itemData;\nconst castingBonus = Number(actorData.abilities[castingStat].mod + actorData.attributes.prof);\nconst spellRange = castingItem.data.range.long ?? castingItem.data.range.value;\nconst summonTarget = \"Aberrant Spirit\";\n\nif (args[0] === \"on\") {\n    let distance = canvas.grid.size >= spellRange ? spellRange : canvas.grid.size;\n\n    let range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n        t: \"circle\",\n        user: game.user.id,\n        x: tokenD.x + canvas.grid.size / 2,\n        y: tokenD.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: distance,\n        borderColor: \"#FF0000\"\n    }]);\n\n    let summonTable = [\n        {\n            type: \"header\",\n            label: `Type`\n        },\n        {\n            type: \"radio\",\n            label: `Beholderkin`,\n            options: \"summonType\"\n        },\n        {\n            type: \"radio\",\n            label: `Slaad`,\n            options: \"summonType\"\n        },\n        {\n            type: \"radio\",\n            label: `Star Spawn`,\n            options: \"summonType\"\n        }\n    ];\n    let choices = await warpgate.dialog(summonTable,\n        \"⚔️ Choose your Aberrant Spirit:\",\n        \"Summon Forth!\");\n    let creatureArray = [choices[1], choices[2], choices[3]];\n    creatureArray = creatureArray.filter(Boolean);\n    let creatureType = creatureArray[0];\n    let creatureHP = spellLevel >= 5 ? 40 + (10 * spellLevel) : 40;\n    let creatureAC = 11 + spellLevel;\n    let creatureMovement = creatureType === \"Beholderkin\" ? { fly: 30, hover: true } : { walk: 30 };\n    let creatureLang = actorData.traits.languages.value.find(i => i === \"deep\");\n    if (!creatureLang) {\n        creatureLang = duplicate(creatureLang);\n        creatureLang.push(\"deep\");\n    } else {\n        creatureLang = actorData.traits.languages.value;\n    }\n    await game.actors.getName(summonTarget).update({ \"token.name\": `${creatureType} ${summonTarget}` });\n    let updates = {\n        token: {\n            \"name\": `${creatureType} ${summonTarget}`,\n            \"alpha\":0\n        },\n        actor: {\n            \"name\": `${creatureType} ${summonTarget}`,\n            \"data.details.type\": { value: \"aberration\", subtype: creatureType },\n            \"data.attributes.ac\": { calc: \"natural\", flat: creatureAC },\n            \"data.attributes.hp\": { value: creatureHP, max: creatureHP, formula: creatureHP },\n            \"data.attributes.movement\": creatureMovement,\n            \"data.details.cr\": actorData.attributes.prof,\n            \"data.traits.languages.value\": creatureLang,\n            \"flags.summons.name\" : castingItem.name,\n            \"flags.summons.actorId\": tactor.id,\n            \"flags.summons.tokenId\": tokenD.id,\n            \"flags.summons.spellUuid\": lastArg.origin\n        }\n    }\n    let creatureLayout = { Item: { \"Multiattack\": { name: `Multiattack (${Math.floor(spellLevel / 2)} attacks)` } } };\n    if (creatureType == \"Slaad\") {\n        creatureLayout.Item[\"Whispering Aura\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Psychic Slam\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Eye Ray\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Claws\"] = {\n            \"data.description.value\": `Melee Weapon Attack: +${castingBonus} to hit, reach 5 ft., one target. Hit: 1d10 + 3 + ${spellLevel} slashing damage. If the target is a creature, it can’t regain hit points until the start of the aberration’s next turn.`,\n            \"data.damage.parts\": [[`1d8[slashing] + 3 + ${spellLevel}`, \"slashing\"]],\n            \"data.attackBonus\": castingBonus,\n        }\n    }\n    if (creatureType == \"Star Spawn\") {\n        creatureLayout.Item[\"Regeneration\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Claws\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Eye Ray\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Psychic Slam\"] = {\n            \"data.description.value\": `Melee Spell Attack: +${castingBonus} to hit, reach 5 ft., one creature. Hit: 1d8 + 3 + ${spellLevel} psychic damage.`,\n            \"data.damage.parts\": [[`1d8[psychic] + 3 + ${spellLevel}`, \"psychic\"]],\n            \"data.attackBonus\": castingBonus\n        }\n    }\n    if (creatureType == \"Beholderkin\") {\n        creatureLayout.Item[\"Regeneration\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Whispering Aura\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Claws\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Psychic Slam\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Eye Ray\"] = {\n            \"data.description.value\": `Ranged Spell Attack: +${castingBonus} to hit, range 150 ft., one creature. Hit: 1d8 + 3 + ${spellLevel} psychic damage.`,\n            \"data.damage.parts\": [[`1d8[psychic] + 3 + ${spellLevel}`, \"psychic\"]],\n            \"data.attackBonus\": castingBonus\n        }\n    }\n    updates[\"embedded\"] = creatureLayout;\n    console.log(updates)\n\n    async function myEffectFunction(template, update) {\n        new Sequence()\n            .effect()\n            .file(\"jb2a.magic_signs.circle.02.abjuration.intro.dark_red\")\n            .atLocation(template)\n            .waitUntilFinished()\n            .center()\n            .scale(0.5)\n            .belowTokens()\n            .play()\n    }\n\n    async function postEffects(template, update) {\n        //bring in our minion\n        new Sequence()\n            .animation()\n            .delay(2000)\n            .on(update)\n            .fadeIn(500)\n            .play()\n    }\n\n    let callbacks = {\n        pre: async (template, update) => {\n            myEffectFunction(template, update);\n            await warpgate.wait(500);\n            await range[0].delete();\n        },\n        post: async (template, update) => {\n            postEffects(template, update);\n            await warpgate.wait(500);\n        }\n    };\n    let options = { controllingActor: tactor };\n\n    await warpgate.spawn(summonTarget, updates, callbacks, options);\n}\nif (args[0] === \"off\") {\n    let findToken = canvas.tokens.placeables.find(i => i.actor.data.flags?.summons?.actorId === tactor.id);\n    if (!findToken) return {};\n    await wait(1000);\n    await findToken.document.delete();\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"_id":null,"name":"Summon Aberration","type":"script","author":"Tyd5yiqWrRZMvG30","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\nconst lastArg = args[args.length - 1];\nconst version = Math.floor(game.version);\nlet tactor;\nif (lastArg.tokenId) tactor = canvas.tokens.get(lastArg.tokenId).actor;\nelse tactor = game.actors.get(lastArg.actorId);\nconst tokenD = canvas.tokens.get(lastArg.tokenId);\nconst actorData = tactor.getRollData();\nconst prof = actorData.attributes.prof;\nconst spellLevel = Number(args[1]);\nlet castingStat = actorData.attributes?.spellcasting;\nif (!castingStat) {\n    if (actorData.classes?.warlock) castingStat = \"cha\";\n    else castingStat = \"int\";\n    ui.notifications.error(`Your spellcasting stat is not set in your spellbook, using ${castingStat} instead.`);\n}\nconst castingMod = actorData.abilities[castingStat].mod;\nconst itemD = lastArg.efData.flags.dae.itemData;\nconst spellRange = version > 9 ? itemD.system.range.value : itemD.data.range.value;\nconst summonTarget = \"Aberrant Spirit\";\nconst imageAvatar = { \"Beholderkin\": \"icons/creatures/eyes/slime-single-red.webp\", \"Slaad\": \"icons/creatures/fish/fish-man-eye-green.webp\", \"Star Spawn\": \"icons/creatures/tentacles/tentacle-eyes-yellow-pink.webp\" };\nconst imageToken = { \"Beholderkin\": \"icons/creatures/eyes/slime-single-red.webp\", \"Slaad\": \"icons/creatures/fish/fish-man-eye-green.webp\", \"Star Spawn\": \"icons/creatures/tentacles/tentacle-eyes-yellow-pink.webp\" };\nconst findActor = game.actors.find(i => i.name === summonTarget);\nlet warpgateCheck = ((game.modules.get(\"warpgate\")) && (game.modules.get(\"warpgate\")?.active)) ? true : false;\nlet sequencerCheck = ((game.modules.get(\"sequencer\")) && (game.modules.get(\"sequencer\")?.active)) ? true : false;\nlet jb2aCheck = ((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active)) || ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) ? true : false;\n\nif (!findActor || !warpgateCheck || !sequencerCheck || !jb2aCheck) {\n    let effect = tactor.effects.find(i => ((i.sourceName === itemD.name) && (version > 9 ? i.label : i.data.label)) === \"Concentrating\");\n    await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n    if (!findActor) ui.notifications.error(`${summonTarget} actor is missing, create an actor named '${summonTarget}'`);\n    if (!warpgateCheck) ui.notifications.error(\"Warpgate Module is missing, Install or Enable it.\");\n    if (!sequencerCheck) ui.notifications.error(\"Sequencer Module is missing, Install or Enable it.\");\n    if (!jb2aCheck) ui.notifications.error(\"JB2A is required [free or paid version], install or Enable one of them\");\n    return;\n}\nlet teleportIn;\nlet teleportOut;\nif ((game.modules.get(\"jb2a_patreon\")) && (game.modules.get(\"jb2a_patreon\")?.active)) {\n    teleportIn = `jb2a.magic_signs.circle.02.conjuration.intro.dark_red`;\n    teleportOut = `jb2a.misty_step.02.dark_red`;\n\n} else if (((game.modules.get(\"JB2A_DnD5e\")) && (game.modules.get(\"JB2A_DnD5e\")?.active))) {\n    teleportIn = `jb2a.magic_signs.circle.02.conjuration.intro.yellow`;\n    teleportOut = `jb2a.misty_step.02.blue`;\n}\n\nif (args[0] === \"on\") {\n    const distance = canvas.grid.size >= spellRange ? spellRange : canvas.grid.size - 3;\n    const range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\n        t: \"circle\",\n        user: game.user.id,\n        x: tokenD.x + canvas.grid.size / 2,\n        y: tokenD.y + canvas.grid.size / 2,\n        direction: 0,\n        distance: distance,\n        borderColor: \"#FF0000\"\n    }]);\n    const title = `⚔️ Choose your ${summonTarget}:`;\n    const menuOptions = {};\n    menuOptions[\"buttons\"] = [\n        { label: \"Summon Forth!\", value: true },\n        { label: \"Cancel\", value: false }\n    ];\n    menuOptions[\"inputs\"] = [\n        { type: \"radio\", label: \"Beholderkin\", value: \"Beholderkin\", options: \"summonType\" },\n        { type: \"radio\", label: \"Slaad\", value: \"Slaad\", options: \"summonType\" },\n        { type: \"radio\", label: \"Star Spawn\", value: \"Star Spawn\", options: \"summonType\" }\n    ];\n    let choices = await warpgate.menu(menuOptions, { title, options: { height: \"100%\" } });\n    let summonButtons = choices.buttons;\n    if (!summonButtons) {\n        let effect = tactor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Concentrating\");\n        if (effect) await MidiQOL.socket().executeAsGM(\"removeEffects\", { actorUuid: tactor.uuid, effects: [effect.id] });\n        let spellUpdate = {};\n        let spellSlot;\n        if ((actorData.classes?.warlock) && (castingStat === \"cha\")) spellSlot = \"pact\";\n        else spellSlot = \"spell\" + spellLevel;\n        let currentSlot = actorData.spells[spellSlot].value;\n        spellUpdate[`${version > 9 ? \"system\" : \"data\"}.spells.${spellSlot}.value`] = currentSlot + 1;\n        await tactor.update(spellUpdate);\n        await range[0].delete();\n        return ui.notifications.warn(`Aborted ${itemD.name}, Refunded 1 ${spellSlot === \"pact\" ? spellSlot : `level ${spellLevel}`} slot.`);\n    }\n    let summonChoices = choices.inputs.filter(Boolean);\n    let creatureType = summonChoices[0];\n    let creatureHP = spellLevel >= 5 ? 40 + (10 * spellLevel) : 40;\n    let creatureMovement = creatureType === \"Beholderkin\" ? { fly: 30, hover: true } : { walk: 30 };\n    let actorLang = actorData.traits.languages.value.filter(i => i !== \"deep\");\n    let creatureCL = findActor.getRollData().traits.languages.value;\n    let creatureLang = creatureCL.concat(actorLang);\n    await findActor.update({ \"token.name\": `${creatureType} ${summonTarget}` });\n    let updates = {};\n    let creatureLayout = { Item: { \"Multiattack\": { name: `Multiattack (${Math.floor(spellLevel / 2)} attacks)` } } };\n    if (version > 9) {\n        updates[\"token\"] = {\n            \"name\": `${creatureType} ${summonTarget}`,\n            \"texture.src\": imageToken[creatureType],\n            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n            \"bar1\": { attribute: \"attributes.hp\" },\n            \"actorLink\": false,\n            \"alpha\": 0\n        };\n        updates[\"actor\"] = {\n            \"name\": `${creatureType} ${summonTarget} ${tactor.name}`,\n            \"img\": imageAvatar[creatureType],\n            \"system.details.type\": { value: \"aberration\", subtype: creatureType },\n            \"system.attributes.ac\": { formula: 11 + spellLevel, calc: \"custom\" },\n            \"system.attributes.hp\": { value: creatureHP, max: creatureHP, formula: creatureHP },\n            \"system.attributes.movement\": creatureMovement,\n            \"system.details.cr\": prof,\n            \"system.traits.languages.value\": creatureLang,\n            \"flags.warpgate.summonAberration.name\": itemD.name,\n            \"flags.warpgate.summonAberration.actorId\": tactor.id,\n            \"flags.warpgate.summonAberration.tokenId\": tokenD.id,\n            \"flags.warpgate.summonAberration.spell\": itemD.name\n        }\n    } else {\n        updates[\"token\"] = {\n            \"name\": `${creatureType} ${summonTarget}`,\n            \"img\": imageToken[creatureType],\n            \"displayName\": CONST.TOKEN_DISPLAY_MODES.HOVER,\n            \"disposition\": CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n            \"displayBars\": CONST.TOKEN_DISPLAY_MODES.ALWAYS,\n            \"bar1\": { attribute: \"attributes.hp\" },\n            \"actorLink\": false,\n            \"alpha\": 0\n        };\n        updates[\"actor\"] = {\n            \"name\": `${creatureType} ${summonTarget} ${tactor.name}`,\n            \"img\": imageAvatar[creatureType],\n            \"data.details.type\": { value: \"aberration\", subtype: creatureType },\n            \"data.attributes.ac\": { formula: 11 + spellLevel, calc: \"custom\" },\n            \"data.attributes.hp\": { value: creatureHP, max: creatureHP, formula: creatureHP },\n            \"data.attributes.movement\": creatureMovement,\n            \"data.details.cr\": prof,\n            \"data.traits.languages.value\": creatureLang,\n            \"flags.warpgate.summonAberration.name\": itemD.name,\n            \"flags.warpgate.summonAberration.actorId\": tactor.id,\n            \"flags.warpgate.summonAberration.tokenId\": tokenD.id,\n            \"flags.warpgate.summonAberration.spell\": itemD.name\n        };\n    }\n\n    if (creatureType == \"Slaad\") {\n        creatureLayout.Item[\"Whispering Aura\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Psychic Slam\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Eye Ray\"] = warpgate.CONST.DELETE;\n        const clawDescription = `Melee Weapon Attack: +${castingMod} to hit, reach 5 ft., one target. Hit: 1d10 + 3 + ${spellLevel} slashing damage. If the target is a creature, it can’t regain hit points until the start of the aberration’s next turn.`;\n        const clawDamage = [[`1d10[slashing] + 3 + ${spellLevel}`, \"slashing\"]];\n        if (version > 9) {\n            creatureLayout.Item[\"Claws\"] = {\n                \"system.description.value\": clawDescription,\n                \"system.damage.parts\": clawDamage,\n                \"system.attackBonus\": castingMod,\n            }\n        } else {\n            creatureLayout.Item[\"Claws\"] = {\n                \"data.description.value\": clawDescription,\n                \"data.damage.parts\": clawDamage,\n                \"data.attackBonus\": castingMod,\n            }\n        }\n    }\n    if (creatureType == \"Star Spawn\") {\n        creatureLayout.Item[\"Regeneration\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Claws\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Eye Ray\"] = warpgate.CONST.DELETE;\n        const slamDescription = `Melee Spell Attack: +${castingMod} to hit, reach 5 ft., one creature. Hit: 1d8 + 3 + ${spellLevel} psychic damage.`;\n        const slamDamage = [[`1d8[psychic] + 3 + ${spellLevel}`, \"psychic\"]];\n        if (version > 9) {\n            creatureLayout.Item[\"Psychic Slam\"] = {\n                \"system.description.value\": slamDescription,\n                \"system.damage.parts\": slamDamage,\n                \"system.attackBonus\": castingMod\n            }\n        } else {\n            creatureLayout.Item[\"Psychic Slam\"] = {\n                \"data.description.value\": slamDescription,\n                \"data.damage.parts\": slamDamage,\n                \"data.attackBonus\": castingMod\n            }\n        }\n    }\n    if (creatureType == \"Beholderkin\") {\n        creatureLayout.Item[\"Regeneration\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Whispering Aura\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Claws\"] = warpgate.CONST.DELETE;\n        creatureLayout.Item[\"Psychic Slam\"] = warpgate.CONST.DELETE;\n        const eyeDescripttion = `Ranged Spell Attack: +${castingMod} to hit, range 150 ft., one creature. Hit: 1d8 + 3 + ${spellLevel} psychic damage.`;\n        const eyeDamage = [[`1d8[psychic] + 3 + ${spellLevel}`, \"psychic\"]];\n        if (version > 9) {\n            creatureLayout.Item[\"Eye Ray\"] = {\n                \"system.description.value\": eyeDescripttion,\n                \"system.damage.parts\": eyeDamage,\n                \"system.attackBonus\": castingMod\n            }\n        } else {\n            creatureLayout.Item[\"Eye Ray\"] = {\n                \"data.description.value\": eyeDescripttion,\n                \"data.damage.parts\": eyeDamage,\n                \"data.attackBonus\": castingMod\n            }\n        }\n    }\n\n    updates[\"embedded\"] = creatureLayout;\n\n    async function postEffects(template, token) {\n        new Sequence()\n            .animation()\n            .on(token)\n            .fadeIn(500)\n            .play()\n    }\n\n    async function myEffectFunction(template, update) {\n        new Sequence()\n            .effect()\n            .file(teleportIn)\n            .atLocation(template)\n            .waitUntilFinished()\n            .center()\n            .scale(0.5)\n            .belowTokens()\n            .play()\n    }\n\n    let callbacks = {\n        pre: async (template, update) => {\n            await range[0].delete();\n            myEffectFunction(template, update);\n            await warpgate.wait(500);\n        },\n        post: async (template, token) => {\n            await postEffects(template, token);\n            await warpgate.wait(500);\n            let aeUpdates = [];\n            await DAE.setFlag(tactor, itemD.name, token.id);\n            let whisperEffect = token.actor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Whispering Aura\");\n            let regenEffect = token.actor.effects.find(i => (version > 9 ? i.label : i.data.label) === \"Regeneration\");\n            let addRegen = regenEffect ? true : false;\n            if ((!(game.modules.get(\"dnd5e-helpers\"))) && (!(game.modules.get(\"dnd5e-helpers\")?.active)) && (addRegen)) addRegen = false;\n            else if (!(game.settings.get(\"dnd5e-helpers\", \"autoRegen\")) && (addRegen)) addRegen = false;\n            if (whisperEffect) aeUpdates.push({ _id: whisperEffect?.id, disabled: false });\n            if (!addRegen) aeUpdates.push({ _id: regenEffect?.id, disabled: false });\n            if (aeUpdates.length > 0) await MidiQOL.socket().executeAsGM(\"updateEffects\", { actorUuid: token.actor.uuid, updates: aeUpdates });\n        }\n    };\n\n    let options = { controllingActor: tactor };\n\n    await warpgate.spawn(summonTarget, updates, callbacks, options);\n}\n\nif (args[0] === \"off\") {\n    console.error(itemD.name, `Turning off`);\n    let getId = await DAE.getFlag(tactor, itemD.name);\n    if (!getId) return {};\n    let getSummoned = canvas.tokens.get(getId);\n    new Sequence()\n        .effect()\n        .file(teleportOut)\n        .center()\n        .atLocation(getSummoned)\n        .scale(0.5)\n        .animation()\n        .on(getSummoned)\n        .fadeOut(1000)\n        .thenDo(async function () {\n            await wait(1500);\n            await warpgate.dismiss(getSummoned.id, game.canvas.scene.id);\n            await DAE.unsetFlag(tactor, itemD.name);\n        })\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}}},"exportSource":{"world":"darklands","system":"dnd5e","coreVersion":"9.280","systemVersion":"1.6.3"},"cf":{"id":"temp_asbmvb64unq"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669440566892,"modifiedTime":1669595272681,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"mixK1nKjVnxAWHmH","folder":null,"sort":0,"ownership":{"default":0,"T4cu5jv0VXcrhb1w":3}}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_asbmvb64unq","name":"Livello 4","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["mixK1nKjVnxAWHmH"],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594655193,"modifiedTime":1669595272680,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"uDmvEj2jWaHzHC0B"}
{"name":"#[CF_tempEntity]","type":"weapon","flags":{"cf":{"id":"temp_z5cg2twoa1","name":"Livello 2","color":"#000000","fontColor":"#FFFFFF","icon":"","sorting":"m","contents":["Dujig3erSBaUa1BP","Us206ErcljczYTaj"],"children":[],"folderPath":[],"version":"2.5.5","parent":null}},"img":"icons/svg/item-bag.svg","system":{"description":{"value":"","chat":"","unidentified":""},"source":"","quantity":1,"weight":0,"price":0,"attunement":0,"equipped":false,"rarity":"","identified":true,"activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":null,"recovery":""},"consume":{"type":"","target":null,"amount":null},"ability":null,"actionType":null,"attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"armor":{"value":10},"hp":{"value":0,"max":0,"dt":null,"conditions":""},"weaponType":"simpleM","baseItem":"","properties":{},"proficient":true},"effects":[],"folder":null,"sort":0,"ownership":{"default":0,"cerf0tYYbyMdOK0R":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1669594571256,"modifiedTime":1669595282803,"lastModifiedBy":"cerf0tYYbyMdOK0R"},"_id":"zH9AcxD5onCRCMZR"}
